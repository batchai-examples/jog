// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package server

import (
	"github.com/go-kratos/kratos/v2/log"
	"github.com/qiangyt/jog/server/biz"
	"github.com/qiangyt/jog/server/conf"
	"github.com/qiangyt/jog/server/data"
	"github.com/qiangyt/jog/server/server"
	"github.com/qiangyt/jog/server/service"
)

// Injectors from wire.go:

// initServer init Jog Server with kratos application.
func initServer(serverId ServerId, serverName ServerName, serverVersion ServerVersion, confServer *conf.Server, confData *conf.Data, logger log.Logger) (*ServerT, func(), error) {
	dataData, cleanup, err := data.NewData(confData, logger)
	if err != nil {
		return nil, nil, err
	}
	greeterRepo := data.NewGreeterRepo(dataData, logger)
	greeterUsecase := biz.NewGreeterUsecase(greeterRepo, logger)
	greeterService := service.NewGreeterService(greeterUsecase, logger)
	httpServer := server.NewHTTPServer(confServer, greeterService, logger)
	grpcServer := server.NewGRPCServer(confServer, greeterService, logger)
	serverT := newServer(serverId, serverName, serverVersion, logger, httpServer, grpcServer)
	return serverT, func() {
		cleanup()
	}, nil
}
